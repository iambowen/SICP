(define (fast-multiple a b)
  (define (double x) (* x 2))
  (define (halve x) (/ x 2))
  (define (iter r a b)
    (cond ((= b 0) r)
          ((even? b) (iter r (double a) (halve b)))
          (else (iter (+ r a) a (- b 1)))
        )
    )
  (iter 0 a b)
  )

(fast-multiple 2 0)
(fast-multiple 2 1)
(fast-multiple 2 2)
(fast-multiple 2 4)
(fast-multiple 2 8)
(fast-multiple 2 16)

(fast-multiple 2 3)
(fast-multiple 2 5)
(fast-multiple 2 10)
(fast-multiple 2 20)

